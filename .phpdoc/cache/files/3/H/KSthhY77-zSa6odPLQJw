1746497166
0LxPEh5b96%3Af9ff6f921caca2d77253784588caa120-57f23b746030e9079692df47bb0b6206
s:16448:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"57f23b746030e9079692df47bb0b6206";s:39:" phpDocumentor\Reflection\Php\File name";s:14:"Admin_page.php";s:39:" phpDocumentor\Reflection\Php\File path";s:24:"app/Views/Admin_page.php";s:41:" phpDocumentor\Reflection\Php\File source";s:11427:"<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Gestion du groupe</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin-top: 20px;
        }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        .header-bar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #fff; /* Change as per your design */
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            z-index: 1000; /* Keeps the header above other content */
            display: flex;
            justify-content: space-between;
            padding: 10px 20px; /* Adjusted padding */
            align-items: center;
        }
        .show {
            display: block;
        }

        .logo {
            height: 30px; /* Adjust height to make the logo smaller */
            width: auto; /* Maintain aspect ratio */
        }

        .home-link {
            color: orange; /* Match text color with the header */
            font-size: 1.5rem; /* Adjust size as needed */
            padding: 0 5px; /* Spacing around the icon */
            text-decoration: none; /* Removes underline */
        }

        .home-link:hover {
            color: orangered; /* Slightly lighter on hover */
        }

        .icon-link {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 40px; /* Adjust size as needed */
            height: 40px; /* Adjust size as needed */
            border-radius: 20px; /* Circular button */
            background-color: #f60; /* Orange background */
            color: white; /* White icon color */
            text-decoration: none;
            margin: 5px; /* Spacing around the button */
        }

        .icon-link:hover {
            background-color: #e55a00; /* Darker orange on hover */
        }


        .icon-link:hover::after {
            content: attr(title); /* Display the title attribute content */
            position: absolute;
            background: #000;
            color: #fff;
            padding: 5px 10px;
            white-space: nowrap;
            z-index: 10;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            border-radius: 4px;
            font-size: 0.75em;
        }

        .icon-link:hover::before {
            content: "";
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: black transparent transparent transparent;
        }
        .icon-button {
            background: none;
            border: none;
            cursor: pointer;
            color: #333;
            font-size: 18px;
            padding: 5px;
        }

        .icon-button:hover {
            color: #007bff;
        }
        .actions button {
            border: none;
            background: none;
            cursor: pointer;
        }
        .list-item {
            background-color: #fff;
            border: 1px solid #ddd; /* Subtle border for distinction */
            padding: 10px 15px; /* Adequate padding for content */
            margin-bottom: 10px; /* Space between items */
            border-radius: 5px; /* Soften edges */
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: box-shadow 0.3s ease-in-out, transform 0.2s ease; /* Smooth transitions for hover effects */
        }

        .list-item:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15); /* Slight shadow on hover for depth */
            transform: translateY(-2px); /* Subtle lift effect */
        }

        /* Styling specific to action buttons inside list items */
        .list-item .btn-supprimer {
            background-color: #f44336; /* Consistent delete button style */
            color: white;
            border: none;
            border-radius: 4px;
            padding: 6px 12px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .list-item .btn-supprimer:hover {
            background-color: #d32f2f; /* Darker red on hover */
        }
        .list-item .btn-accepter {
            background-color: #4CAF50; /* Vibrant green background */
            color: white; /* White text for high contrast */
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            cursor: pointer;
            transition: background-color 0.3s; /* Smooth transition for hover effect */
            text-decoration: none; /* Removes underline from links if applied to an <a> tag */
            display: inline-block; /* Ensure it lines up nicely if used inline */
        }

        .list-item .btn-accepter:hover {
            background-color: #45a049; /* Darker green on hover */
        }


        .actions button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .actions button:hover {
            background-color: #0056b3;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh; /* Full viewport height */
            margin: 0; /* Remove default margin */
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }

        .container {
            width: 90%; /* Adjust width as necessary */
            max-width: 800px; /* Maximum width */
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-top: 20px; /* Only needed if not using flex on the body */
        }
        h2 {
            font-size: 24px; /* Sizable but adaptable to design needs */
            font-weight: bold; /* Ensures prominence */
            color: #f60; /* Orange color to match your theme */
            margin-top: 20px; /* Adequate spacing from the previous section */
            margin-bottom: 10px; /* Space before the next section */
            text-align: center; /* Centers the heading, optional based on design */
            text-transform: uppercase; /* All caps for added style, optional */
            letter-spacing: 1px; /* More readability for uppercase text */
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
        }
        @media (max-width: 768px) {
            h2 {
                font-size: 20px; 
            }
}

        a {
            color: #f60; /* Orange link color */
            text-decoration: none;
        }

        a:hover {
            color: #e55a00; /* Darker orange on hover */
        }


        .btn-custom, .btn-primary {
            background-color: #f60; /* Orange background */
            color: white;
            border: none;
            border-radius: 5px;
            padding: 8px 15px;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-custom:hover, .btn-primary:hover {
            background-color: #e55a00; /* Darker orange on hover */
        }

        .actions button {
            background-color: #f60;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .actions button:hover {
            background-color: #e55a00;
        }
        html, body {
            height: 100%;
        }



    </style>
</head>
<body>
    <header class="header-bar">
        <a href=<?=site_url('/homepage')  ?> class="home-link" class="icon-link home-link" title="Home">
            <img src=<?=base_url('/image/logo2.png')?> alt="Logo" class="logo">
        </a>
        <a href=<?=site_url('/profil')  ?> class="home-link" class="icon-link home-link" title="Profil">
            <i class="fas fa-user"></i>
        </a>
        <a href=<?=site_url('/groupe')  ?> class="home-link" class="icon-link home-link" title="Créer un groupe">
            <i class="fas fa-user-plus"></i>
        </a>
        <a href=<?=site_url('/admin')  ?> class="home-link" class="icon-link home-link" title="Gestion du groupe">
            <i class="fas fa-users-cog"></i>
        </a>
        <a href=<?=site_url('/logout')  ?> class="home-link" class="icon-link home-link" title="Déconnexion">
            <i class="fas fa-sign-out-alt"></i>
        </a>
    </header>
    <div class="container">
    <a href="<?=site_url('groupepage/'.$group_id )?>" class="icon-link" title="Voir le groupe">
        <i class="fas fa-eye"></i>
    </a>
        <h2>Membre du groupe <?= $group_name ?></h2>
        <div id="listeMembre" class="list">
        <?php foreach ($liste_membre as $row) { ?>
                <div class="list-item">
                    <?= $row['nom_user'] ?>
                    <form method="post" id="post_refuse">
                        <input hidden type="text" name="decision" value="refuse">
                        <input hidden type="text" name="id_user" value=<?=$row['id']?>>
                    </form>
                    <?php if($id_admin != $row['id']){ ?>
                         <button type="submit" form="post_refuse" value="Submit" class="btn-supprimer">Supprimer</button>
                    <?php } ?>
                </div>    
            <?php } ?>
        </div>
        
        <h2>Liste d'attente</h2>
        <div id="liste_attente" class="list">
            <?php foreach ($liste_attente as $item) { ?>
                <div class="list-item">
                    <?= $item['nom_user'] ?>
                    <form method="post" id="post_approve">
                        <input hidden type="text" name="decision" value="accept">
                        <input hidden type="text" name="id_user" value=<?=$item['id']?>>
                    </form>
                    <button type="submit" form="post_approve" value="Submit" class="btn-accepter">Accepter</button>
                    <form method="post" id="post_refuse">
                        <input hidden type="text" name="decision" value="refuse">
                        <input hidden type="text" name="id_user" value=<?=$item['id']?>>
                    </form>
                    <button type="submit" form="post_refuse" value="Submit" class="btn-supprimer">Refuser</button>
                    
                </div>    
            <?php } ?>
        </div>
    </div>

</body>
</html>
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";